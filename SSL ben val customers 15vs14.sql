/* Code to extract data for SSL Ben Val */
/* November 2016 */

SELECT MIN(TRAN_DATE_ID) FROM DM3_OWNER.EARN_FACT;
SELECT MAX(TRAN_DATE_ID) FROM DM3_OWNER.EARN_FACT;
/* MIN 20141101  MAX 20161107 */

/* CREATE A TABLE OF RELEVANT CUSTOMERS */
/* EXISTING - SWIPED BEFORE THE START OF THE PRE PERIOD */
/* ACQUISITION - SWIPED FOR THE FIRST TIME IN THE MEASUREMENT PERIOD */
/* CHECK VOLUME OF FIRST SWIPED IN PRE */

/* PRE PERIOD = 20141101-20151031*/
/* MEASUREMENT PERIOD = 20151101-20161031 */

DROP TABLE BEN_VAL_CUSTS_1;

CREATE TABLE BEN_VAL_CUSTS_1
AS SELECT ACCOUNT_NUMBER, 
               MAX(CASE WHEN SWIPE_DATE <= '31OCT2014' THEN 1 ELSE 0 END) AS EXISTING,
               MAX(CASE WHEN SWIPE_DATE BETWEEN '01NOV2015' AND '31OCT2016' THEN 1 ELSE 0 END) AS ACQUISITION,
               MAX(CASE WHEN SWIPE_DATE BETWEEN '01NOV2014' AND '31OCT2015' THEN 1 ELSE 0 END) AS FIRST_SWIPE_PRE             
     FROM DM1_OWNER.NFIRST_SWIPE_SPONSOR_FACT
    WHERE  TRAN_SPONSOR = 'JSAINSBURY' AND (SWIPE_DATE <= '31OCT2014' OR SWIPE_DATE BETWEEN '01NOV2014' AND '31OCT2016')
    GROUP BY ACCOUNT_NUMBER;
    
DROP TABLE BEN_VAL_CUSTS_2;

CREATE TABLE BEN_VAL_CUSTS_2
AS SELECT A.*
    FROM BEN_VAL_CUSTS_1 A
     INNER JOIN 
     (SELECT DISTINCT ACCOUNT_NUMBER 
     FROM DM1_OWNER.FULL_CARD
            WHERE COLLECTOR_STATUS = 'AC'
            AND COLLECTOR_REASON_CODE = 'RY'
            AND ACCOUNT_TYPE = 'C') B
     ON A.ACCOUNT_NUMBER=B.ACCOUNT_NUMBER;
    
SELECT COUNT(*) , COUNT(DISTINCT(ACCOUNT_NUMBER)), SUM(EXISTING), SUM(ACQUISITION), SUM(FIRST_SWIPE_PRE)
FROM BEN_VAL_CUSTS_2;
/*
                        ACCOUNTS      EXISTING      ACQUISITION     FIRST_SWIPE_PRE
        15206490    15206490    13166499             909194              1127008  
*/

/* Take 10% sample */

DROP TABLE BEN_VAL_CUSTS_SAMP;

CREATE TABLE BEN_VAL_CUSTS_SAMP AS
SELECT *
FROM BEN_VAL_CUSTS_2
WHERE substr(account_number,7,2) in (18,28,38,78,88,13,23,24,25,26,27);

SELECT COUNT(*) , COUNT(DISTINCT(ACCOUNT_NUMBER)), SUM(EXISTING), SUM(ACQUISITION)
FROM BEN_VAL_CUSTS_SAMP;
/*
1672512    1672512    1448198    99919
*/

/* CHECK VOLUME OF NNES  */

DROP TABLE NNES_CHECK;

CREATE TABLE NNES_CHECK AS
SELECT A. ACCOUNT_NUMBER, NNES
FROM BEN_VAL_CUSTS_2 A
LEFT JOIN PAD_OWNER.NNES_HISTORY HIST
ON HIST.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER
WHERE MONTH_RUN = 201510;

SELECT NNES, COUNT(ACCOUNT_NUMBER)
FROM NNES_CHECK
GROUP BY NNES;

DROP TABLE NNES_CHECK_SAMP;

CREATE TABLE NNES_CHECK_SAMP AS
SELECT A. ACCOUNT_NUMBER, NNES
FROM BEN_VAL_CUSTS_SAMP A
LEFT JOIN PAD_OWNER.NNES_HISTORY HIST
ON HIST.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER
WHERE MONTH_RUN = 201510;

SELECT NNES, COUNT(ACCOUNT_NUMBER)
FROM NNES_CHECK_SAMP
GROUP BY NNES;

/* JOIN ON TRANSACTION INFO */    
/* FLAG EACH QUARTER */
/* INCLUDE PETROL */

DROP TABLE BEN_VAL_TRANS;

CREATE TABLE BEN_VAL_TRANS
AS
   SELECT COALESCE (X.ACCOUNT_NUMBER, Y.ACCOUNT_NUMBER) AS ACCOUNT_NUMBER,
          X.SPEND_I AS SPEND_YEAR_1, X.TRANS_I AS TRANS_YEAR_1, X.POINTS_I AS POINTS_YEAR_1,
          X.Q_ONE_I AS Q1_2014, X.Q_TWO_I AS Q2_2014, X.Q_THREE_I AS Q3_2014, X.Q_FOUR_I AS Q4_2014,
          Y.SPEND_II AS SPEND_YEAR_2, Y.TRANS_II AS TRANS_YEAR_2, Y.POINTS_II AS POINTS_YEAR_2,
          Y.Q_ONE_II AS Q1_2015, Y.Q_TWO_II AS Q2_2015, Y.Q_THREE_II AS Q3_2015, Y.Q_FOUR_II AS Q4_2015
     FROM    (  SELECT B.ACCOUNT_NUMBER,
                       SUM (A.TRAN_AMOUNT) AS SPEND_I,
                       COUNT (A.TRNT_KEY) AS TRANS_I,
                       SUM (A.TRAN_POINTS) AS POINTS_I,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20141101 AND 20150131
                              THEN 1
                              ELSE 0
                           END) AS Q_ONE_I,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20150201 AND 20150430
                              THEN 1
                              ELSE 0
                           END) AS Q_TWO_I,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20150501 AND 20150731
                              THEN 1
                              ELSE 0
                           END) AS Q_THREE_I,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20150801 AND 20151031
                              THEN 1
                              ELSE 0
                           END) AS Q_FOUR_I
                  FROM    DM3_OWNER.EARN_FACT A
                       INNER JOIN
                          BEN_VAL_CUSTS_SAMP B
                       ON A.ACCOUNT_NUMBER = B.ACCOUNT_NUMBER
                 WHERE A.TRAN_SPONSOR = 'JSAINSBURY'           
                       AND A.LOCATION_CODE NOT IN ('6001', '6002', '6003', '6004', '6005', '6006', '6007',
                                                   '6008', '6009', '6010', '6011', '6012', '6013', '6014',
                                                   '9119', '9115')
                       AND A.TRANSACTION_TYPE_CODE = 'ST'
                       AND A.TRAN_AMOUNT > 0
                       AND A.TRAN_DATE_ID BETWEEN 20141101 AND 20151031
              GROUP BY B.ACCOUNT_NUMBER) X
          FULL OUTER JOIN
             (  SELECT B.ACCOUNT_NUMBER,
                       SUM (A.TRAN_AMOUNT) AS SPEND_II,
                       COUNT (A.TRNT_KEY) AS TRANS_II,
                       SUM (A.TRAN_POINTS) AS POINTS_II,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20151101 AND 20160131
                              THEN 1
                              ELSE 0
                           END)
                          AS Q_ONE_II,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20160201 AND 20160430
                              THEN 1
                              ELSE 0
                           END) AS Q_TWO_II,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20160501 AND 20160731
                              THEN 1
                              ELSE 0
                           END) AS Q_THREE_II,
                       MAX(CASE WHEN A.TRAN_DATE_ID BETWEEN 20160801 AND 20161031
                              THEN 1
                              ELSE 0
                           END) AS Q_FOUR_II
                  FROM    DM3_OWNER.EARN_FACT A
                       INNER JOIN
                         BEN_VAL_CUSTS_SAMP B
                       ON A.ACCOUNT_NUMBER = B.ACCOUNT_NUMBER
                 WHERE A.TRAN_SPONSOR = 'JSAINSBURY'
                       AND A.LOCATION_CODE NOT IN ('6001', '6002', '6003', '6004', '6005', '6006', '6007',
                                                   '6008', '6009', '6010', '6011', '6012', '6013', '6014',
                                                   '9119', '9115')
                       AND A.TRANSACTION_TYPE_CODE = 'ST'
                       AND A.TRAN_AMOUNT > 0
                       AND A.TRAN_DATE_ID BETWEEN 20151101 AND 20161031
              GROUP BY B.ACCOUNT_NUMBER) Y
          ON X.ACCOUNT_NUMBER = Y.ACCOUNT_NUMBER;

/* COUNT ACCOUNTS AND CHECK FOR UNIQUENESS */
SELECT COUNT(ACCOUNT_NUMBER), COUNT(DISTINCT ACCOUNT_NUMBER)
FROM BEN_VAL_TRANS;
/* 1541912    1541912 */

/* MERGE BACK ON CUSTOMER TYPE *?
/* JOIN FIRST SWIPE VARIABLES FOR SSL AND SCHEME */

DROP TABLE BEN_VAL_1 ;

CREATE TABLE BEN_VAL_1 AS
SELECT A.*, EXISTING, ACQUISITION, FIRST_SWIPE_PRE, JS_FIRST_SWIPE_DATE, NECTAR_FIRST_SWIPE_DATE
FROM BEN_VAL_TRANS A
LEFT JOIN BEN_VAL_CUSTS_SAMP B
            ON A.ACCOUNT_NUMBER=B.ACCOUNT_NUMBER
LEFT JOIN (SELECT ACCOUNT_NUMBER,
                            MIN(SWIPE_DATE) AS JS_FIRST_SWIPE_DATE
                                 FROM DM1_OWNER.NFIRST_SWIPE_SPONSOR_FACT
                                WHERE TRAN_SPONSOR = 'JSAINSBURY'
                                GROUP BY ACCOUNT_NUMBER) X
             ON A.ACCOUNT_NUMBER = X.ACCOUNT_NUMBER
LEFT JOIN (SELECT ACCOUNT_NUMBER,
                              MIN (SWIPE_DATE) AS NECTAR_FIRST_SWIPE_DATE
                                 FROM DM1_OWNER.NFIRST_SWIPE_SPONSOR_FACT
                                WHERE SCHEME_FIRST_SWIPE = 'Y'
                                GROUP BY ACCOUNT_NUMBER) Y
             ON A.ACCOUNT_NUMBER = Y.ACCOUNT_NUMBER;

SELECT COUNT(ACCOUNT_NUMBER), COUNT(DISTINCT ACCOUNT_NUMBER)
FROM BEN_VAL_1;
/*
1541912    1541912
*/
SELECT MAX(WEEK_NO)
FROM PAD_OWNER.SSL_LOYALTY_SEGMENTS;
/* 201632 = W/E 22/10/16*/

/* JOIN ON USEFUL CUSTOMER SEGMENTS OR DEMOGRAPHICS */

DROP TABLE BEN_VAL_2;

CREATE TABLE BEN_VAL_2 AS
SELECT A.* 
  /* LOYALTY TIER */
  , CASE WHEN LOY2.LOYALTY_SEG IS NULL THEN 'NA' ELSE LOY2.LOYALTY_SEG END AS LOYALTY_YR2
  , CASE WHEN LOY1.LOYALTY_SEG IS NULL THEN 'NA' ELSE LOY1.LOYALTY_SEG END AS LOYALTY_YR1
  /* MY SHOPPING */
  , CASE WHEN XX.MY_SHOPPING_6_CODE IS NULL THEN 'UNKNOWN' ELSE XX.MY_SHOPPING_6_CODE END AS MY_SHOPPING
  /* NES SCORES */
  , CASE WHEN NN.MONTH_RUN=201610 AND NN.NNES IS NOT NULL THEN NN.NNES ELSE 0 END AS NNES_OCT_16
  , CASE WHEN HIST.MONTH_RUN=201510 AND HIST.NNES IS NOT NULL THEN HIST.NNES ELSE 0 END AS NNES_OCT_15
  /* ACORN */
   , CASE
               WHEN ACORN_CATEGORY = 1 THEN '1 Affluent Achievers'
               WHEN ACORN_CATEGORY = 2 THEN '2 Rising Prosperity'
               WHEN ACORN_CATEGORY = 3 THEN '3 Comfortable Communities'
               WHEN ACORN_CATEGORY = 4 THEN '4 Financially Stretched'
               WHEN ACORN_CATEGORY = 5 THEN '5 Urban Adversity'
               WHEN ACORN_CATEGORY = 6 THEN '6 Not Private Households'
               ELSE '7 UNKNOWN'
            END
               AS ACORN
    , CASE WHEN AGE_BAND IS NULL THEN 'UNKNOWN' ELSE AGE_BAND END AS AGE_BAND
    , CASE WHEN AGE_BAND IS NULL THEN 'UNKNOWN' 
               WHEN AGE_BAND IN ('UNDER 18', '18 TO 24','25 TO 34') THEN '18 TO 34'
               WHEN AGE_BAND IN ('65 TO 74','75 AND OVER') THEN '65 AND OVER' ELSE AGE_BAND END AS AGE_BAND2            
FROM BEN_VAL_1 A
INNER JOIN DM1_OWNER.FULL_CARD B
               ON A.ACCOUNT_NUMBER = B.ACCOUNT_NUMBER             
/* LOYALTY */
LEFT JOIN (
    SELECT DISTINCT ACCOUNT_NUMBER, 
                LOYALTY_SEG
                FROM PAD_OWNER.SSL_LOYALTY_SEGMENTS
                WHERE WEEK_NO IN (201632)) LOY2
ON LOY2.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER 
LEFT JOIN (
    SELECT DISTINCT ACCOUNT_NUMBER, 
                LOYALTY_SEG
                FROM PAD_OWNER.SSL_LOYALTY_SEGMENTS
                WHERE WEEK_NO IN (201532)) LOY1  
ON LOY1.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER
/* MY SHOPPING SEGMENT */
LEFT JOIN (
  SELECT SUBSTR(LOYALTY_ID,1,8) AS ACCOUNT_NUMBER , MAX(MY_SHOPPING_6_CODE) AS MY_SHOPPING_6_CODE FROM SSL_OWNER.MY_SHOPPING_SEGMENTATION 
  INNER JOIN
  (SELECT LOYALTY_ID, MAX(WEEK_NUMBER) AS WEEK_NUMBER
              FROM SSL_OWNER.MY_SHOPPING_SEGMENTATION
              GROUP BY LOYALTY_ID)  
  USING(LOYALTY_ID,WEEK_NUMBER)
  GROUP BY SUBSTR(LOYALTY_ID,1,8)            
) XX ON XX.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER
/* NNES SCORE */
LEFT JOIN (
   SELECT ACCOUNT_NUMBER, MONTH_RUN, NNES
                FROM PAD_OWNER.NNES_HISTORY HIST
                WHERE MONTH_RUN = 201510
                GROUP BY ACCOUNT_NUMBER, MONTH_RUN, NNES
) HIST ON HIST.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER
LEFT JOIN (
   SELECT ACCOUNT_NUMBER, MONTH_RUN, NNES
                FROM PAD_OWNER.NNES 
                WHERE MONTH_RUN = 201610
                GROUP BY ACCOUNT_NUMBER, MONTH_RUN, NNES
) NN ON NN.ACCOUNT_NUMBER=A.ACCOUNT_NUMBER
 WHERE     B.ACCOUNT_TYPE = 'C'
            AND B.COLLECTOR_REASON_CODE = 'RY'
            AND B.COLLECTOR_STATUS = 'AC'
            AND B.DWH_PRIMARY_FLAG = 'Y'
;

SELECT COUNT(ACCOUNT_NUMBER), COUNT(DISTINCT ACCOUNT_NUMBER)
FROM BEN_VAL_2;
/*
1539404    1539404*/

/* FIND SPEND CUT OFFS BY YEAR */

SELECT MIN (P95_2014) AS P95_2014
  FROM (SELECT SPEND_YEAR_1 AS P95_2014,
               NTILE (100) OVER (ORDER BY SPEND_YEAR_1) AS NTILE_2014
          FROM BEN_VAL_TRANS A
         WHERE SPEND_YEAR_1 IS NOT NULL) X
 WHERE NTILE_2014 = 95;
 
 /* 4312.26 */
 
 SELECT MIN (P95_2015) AS P95_2015
  FROM (SELECT SPEND_YEAR_2 AS P95_2015,
               NTILE (100) OVER (ORDER BY SPEND_YEAR_2) AS NTILE_2015
          FROM BEN_VAL_TRANS A
         WHERE SPEND_YEAR_2 IS NOT NULL) X
 WHERE NTILE_2015 = 95;
 
 /* 4208.88 */
 
 /* CREATE A TABLE CAPPING SPEND AND MARKING ENGAGED AND UNENGAGED - NNES CUT OFF AS >= 17 */
 
DROP TABLE  BEN_VAL_FOR_RIM;
 
CREATE TABLE BEN_VAL_FOR_RIM
AS
   SELECT A.*,
          CASE
             WHEN SPEND_YEAR_1 <= 4312.26 THEN SPEND_YEAR_1
             WHEN SPEND_YEAR_1 IS NULL THEN 0
             ELSE 4312.26 
          END
             AS SPEND_YEAR_1C,
          CASE WHEN SPEND_YEAR_1 > 4312.26  THEN 1 ELSE 0 END
             AS SPEND_YEAR_1_CAPPED,
          CASE
             WHEN SPEND_YEAR_2 <=4208.88   THEN SPEND_YEAR_2
             WHEN SPEND_YEAR_2 IS NULL THEN 0
             ELSE 4208.88 
          END
             AS SPEND_YEAR_2C,
          CASE WHEN SPEND_YEAR_2 > 4208.88   THEN 1 ELSE 0 END
             AS SPEND_YEAR_2_CAPPED,
          CASE
             WHEN  NNES_OCT_15 <= 17 THEN 'CONTROL'
             WHEN  NNES_OCT_15 >  17  THEN 'TEST'
          END
             AS TARGET
         
     FROM BEN_VAL_2 A;
     
     
SELECT TARGET, COUNT(ACCOUNT_NUMBER), COUNT(DISTINCT ACCOUNT_NUMBER)
FROM BEN_VAL_FOR_RIM
GROUP BY TARGET;
/*
CONTROL    431095    431095
TEST        1108309    1108309
*/

/* ONLY INCLUDE CUSTOMERS WHO SHOPPED ALL QUARTERS IN THE PRE PERIOD FOR EXISTING AS BEST PRACTICE */
/* MOVE THIS LOWER DOWN */

DROP TABLE BEN_VAL_FOR_RIM2;

CREATE TABLE BEN_VAL_FOR_RIM2 AS
SELECT A.*, 
        CASE WHEN EXISTING=1 AND Q1_2014=1 AND Q2_2014=1 AND Q3_2014=1 AND Q4_2014=1 THEN 'EXISTING'
                 WHEN ACQUISITION=1 THEN 'ACQUISITION'
                 WHEN FIRST_SWIPE_PRE=1 AND Q1_2015=1 AND Q2_2015=1 AND Q3_2015=1 AND Q4_2015=1 THEN 'FIRST_SWIPE_PRE AND SPEND IN Y2'
                 WHEN FIRST_SWIPE_PRE=1 THEN 'FIRST_SWIPE_PRE, NO SPEND IN Y2'
                 WHEN EXISTING=1 AND SPEND_YEAR_1 IS NULL THEN 'REACTIVATION' ELSE 'EXISTING INFREQUENT' END AS CUST_GROUP
FROM BEN_VAL_FOR_RIM A;

SELECT CUST_GROUP,
            COUNT(ACCOUNT_NUMBER), COUNT(DISTINCT ACCOUNT_NUMBER)
FROM BEN_VAL_FOR_RIM2
GROUP BY CUST_GROUP;

SELECT CUST_GROUP, TARGET,
            COUNT(ACCOUNT_NUMBER), COUNT(DISTINCT ACCOUNT_NUMBER)
FROM BEN_VAL_FOR_RIM2
GROUP BY CUST_GROUP, TARGET;





